<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="loggingConfiguration" type="AirWatch.Logging.Core.Configuration.LoggingConfiguration, AirWatch.Logging.Core" restartOnExternalChanges="true" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.2" />
  </startup>
  <!-- Logging Configuration -->
  <!-- Level can be changed to 'verbose' to show more details on log events -->
  <loggingConfiguration filePath="%programdata%\Airwatch\UnifiedAgent\Logs\PPKGFinalSummary.log" level="Information" logFileRollSize="2048" maxArchivedFiles="10" />
  <appSettings>
    <!-- AirWatch Agent Staging Settings -->
    <!-- Flag indicating whether AirWatch Installer should be staged from Source to Destination path -->
    <add key="AirWatchInstallerStagingEnabled" value="true" />
    <!-- AirWatch Installer source path -->
    <add key="AirWatchInstallerSourcePath" value="%programdata%\VMware" />
    <!-- AirWatch Installer destination path -->
    <add key="AirWatchInstallerDestinationPath" value="%systemdrive%\Recovery\OEM\" />
    <!-- AirWatch Installer file name -->
    <add key="AirWatchInstallerFileName" value="AirwatchAgent.msi" />

    <!-- WorkspaceONE Staging Settings -->
    <!-- Flag indicating whether WorkspaceONE Installer should be staged from Source to Destination path -->
    <add key="WorkspaceOneInstallerStagingEnabled" value="false" />
    <!-- WorkspaceONE Installer source path -->
    <add key="WorkspaceOneInstallerSourcePath" value="%programdata%\VMware" />
    <!-- WorkspaceONE Installer destination path -->
    <add key="WorkspaceOneInstallerDestinationPath" value="%ProgramFiles(x86)%\AirWatch\AgentUI\Resources\Bundle" />
    <!-- WorkspaceONE Installer file name -->
    <add key="WorkspaceOneInstallerFileName" value="AirWatchLLC.VMwareWorkspaceONE.zip" />

    <!-- Registry Key for SFD Deployment agent -->
    <add key="ServiceAccountRegistryPath" value="SOFTWARE\AirWatchMDM\AppDeploymentAgent\S-1-5-18" />
    <!-- Registry Key for SFD app Manifest -->
    <add key="AppManifestRegistryPath" value="SOFTWARE\AirWatchMDM\AppDeploymentAgent\AppManifests" />
    <!-- Registry Key for SFD User Context apps -->
    <add key="CurrentUserSidRegistryPath" value="SOFTWARE\AirWatchMDM\AppDeploymentAgent\{0}" />
    <!-- App Deployment cache path on disk -->
    <add key="AppDeploymentCachePath" value="%programdata%\AirWatchMDM\AppDeploymentCache" />

    <!-- Delay after starting SFD Queue scheduled task in seconds-->
    <add key="DelayAfterStartingSFDScheduledTask" value="10" />

    <!-- Provisioning Timeout in minutes -->
    <add key="TimeoutMinutes" value="90" />
    <!-- App Queue population Delay in minutes -->
    <add key="AppQueuePopulateDelayMinutes" value="5" />
    <!-- App Queue population timeout in minutes -->
    <add key="AppQueuePopulateTimeoutMinutes" value="30" />
    <!-- Refresh rate to track ppkg installation progress  -->
    <add key="RefreshRateSeconds" value="1" />
    <!-- BitLocker Decryption Timeout in minutes -->
    <add key="BitLockerDecryptionTimeoutMinutes" value="60" />
    <!-- Destination path to apply unattend xml -->
    <add key="UnattendXmlDestinationPath" value="%windir%\panther\" />
    <!-- If true and the UnattendXml source file resides on the system drive, the source UnattendXml will be deleted after staging. Otherwise, the file is only copied -->
    <add key="UnattendXmlCleanup" value="true" />

    <!-- If true deletes all files with extension .ppkg at the specified cleanup path -->
    <add key="PpkgCleanup" value="true" />
    <!-- Path to clean up PPKG. Any file with extension .ppkg within the path will be deleted -->
    <add key="PpkgCleanupPath" value="%programdata%\microsoft\provisioning" />

    <!-- PpkgCleanup and UnattendXmlCleanup Timeout in minutes  -->
    <add key="CleanupTimeout" value="10" />

    <!-- The minimum AW Console version that must be used when creating a PPKG so that it passes validation. -->
    <add key="MinimumSupportedConsoleVersion" value="19.02" />

    <!-- A comma-separated list of host names (or ip addresses) to ping when performing network tests -->
    <add key="HostsToPingOnNetworkTests" value="vmware.com,google.com" />
  </appSettings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Reflection" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.IO" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.Extensions" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

</configuration>